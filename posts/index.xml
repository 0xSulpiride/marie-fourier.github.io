<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on My blog</title><link>https://marie-fourier.github.io/posts/</link><description>Recent content in Posts on My blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://marie-fourier.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>RareSkills Gas Puzzles</title><link>https://marie-fourier.github.io/posts/gas-puzzles-writeups/</link><pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate><guid>https://marie-fourier.github.io/posts/gas-puzzles-writeups/</guid><description>Gas Puzzles by Rareskills are a sequence of smart contracts to practice gas optimization. These are used as practice assignments for RareSkills.io and the Udemy Gas Optimization Course
Array Sum Let&amp;rsquo;s start with the easiest one
contract OptimizedArraySum { uint256[] array; function setArray(uint256[] memory _array) external { require(_array.length &amp;lt;= 10, &amp;#34;too long&amp;#34;); array = _array; } function getArraySum() external view returns (uint256) { uint256 sum; for (uint256 i = 0; i &amp;lt; array.</description></item></channel></rss>